<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Exiled.Loader</name>
    </assembly>
    <members>
        <member name="T:Exiled.Loader.Config">
            <summary>
            The configs of the loader.
            </summary>
        </member>
        <member name="P:Exiled.Loader.Config.IsEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.Loader.Config.ShouldLoadOutdatedPlugins">
            <summary>
            Gets or sets a value indicating whether outdated plugins should be loaded or not.
            </summary>
        </member>
        <member name="P:Exiled.Loader.Config.Environment">
            <summary>
            Gets or sets the environment type.
            </summary>
        </member>
        <member name="T:Exiled.Loader.ConfigManager">
            <summary>
            Used to handle plugin configs.
            </summary>
        </member>
        <member name="P:Exiled.Loader.ConfigManager.Serializer">
            <summary>
            Gets the config serializer.
            </summary>
        </member>
        <member name="P:Exiled.Loader.ConfigManager.Deserializer">
            <summary>
            Gets the config serializer.
            </summary>
        </member>
        <member name="M:Exiled.Loader.ConfigManager.Load(System.String)">
            <summary>
            Loads all plugin configs.
            </summary>
            <param name="rawConfigs">The raw configs to be loaded.</param>
            <returns>Returns a dictionary of loaded configs.</returns>
        </member>
        <member name="M:Exiled.Loader.ConfigManager.Reload">
            <summary>
            Reads, Loads and Saves plugin configs.
            </summary>
            <returns>Returns a value indicating if the reloading process has been completed successfully or not.</returns>
        </member>
        <member name="M:Exiled.Loader.ConfigManager.Save(System.String)">
            <summary>
            Saves plugin configs.
            </summary>
            <param name="configs">The configs to be saved, already serialized in yaml format.</param>
            <returns>Returns a value indicating whether the configs have been saved successfully or not.</returns>
        </member>
        <member name="M:Exiled.Loader.ConfigManager.Save(System.Collections.Generic.Dictionary{System.String,Exiled.API.Interfaces.IConfig})">
            <summary>
            Saves plugin configs.
            </summary>
            <param name="configs">The configs to be saved.</param>
            <returns>Returns a value indicating whether the configs have been saved successfully or not.</returns>
        </member>
        <member name="M:Exiled.Loader.ConfigManager.Read">
            <summary>
            Read all plugin configs.
            </summary>
            <returns>Returns the read configs.</returns>
        </member>
        <member name="M:Exiled.Loader.ConfigManager.Clear">
            <summary>
            Clears the configs.
            </summary>
            <returns>Returns a value indicating whether configs have been cleared successfully or not.</returns>
        </member>
        <member name="M:Exiled.Loader.ConfigManager.ReloadRemoteAdmin">
            <summary>
            Reloads RemoteAdmin configs.
            </summary>
        </member>
        <member name="T:Exiled.Loader.Features.Configs.CommentGatheringTypeInspector">
            <summary>
            Spurce: https://dotnetfiddle.net/8M6iIE.
            </summary>
        </member>
        <member name="M:Exiled.Loader.Features.Configs.CommentGatheringTypeInspector.#ctor(YamlDotNet.Serialization.ITypeInspector)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.Loader.Features.Configs.CommentGatheringTypeInspector"/> class.
            </summary>
            <param name="innerTypeDescriptor">The inner type description instance.</param>
        </member>
        <member name="M:Exiled.Loader.Features.Configs.CommentGatheringTypeInspector.GetProperties(System.Type,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.Loader.Features.Configs.CommentsObjectDescriptor">
            <summary>
            Source: https://dotnetfiddle.net/8M6iIE.
            </summary>
        </member>
        <member name="M:Exiled.Loader.Features.Configs.CommentsObjectDescriptor.#ctor(YamlDotNet.Serialization.IObjectDescriptor,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.Loader.Features.Configs.CommentsObjectDescriptor"/> class.
            </summary>
            <param name="innerDescriptor">The inner descriptor instance.</param>
            <param name="comment">The comment to be written.</param>
        </member>
        <member name="P:Exiled.Loader.Features.Configs.CommentsObjectDescriptor.Comment">
            <summary>
            Gets the comment to be written.
            </summary>
        </member>
        <member name="P:Exiled.Loader.Features.Configs.CommentsObjectDescriptor.Value">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.Loader.Features.Configs.CommentsObjectDescriptor.Type">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.Loader.Features.Configs.CommentsObjectDescriptor.StaticType">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.Loader.Features.Configs.CommentsObjectDescriptor.ScalarStyle">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.Loader.Features.Configs.CommentsObjectGraphVisitor">
            <summary>
            Source: https://dotnetfiddle.net/8M6iIE.
            </summary>
        </member>
        <member name="M:Exiled.Loader.Features.Configs.CommentsObjectGraphVisitor.#ctor(YamlDotNet.Serialization.IObjectGraphVisitor{YamlDotNet.Core.IEmitter})">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.Loader.Features.Configs.CommentsObjectGraphVisitor"/> class.
            </summary>
            <param name="nextVisitor">The next visitor instance.</param>
        </member>
        <member name="M:Exiled.Loader.Features.Configs.CommentsObjectGraphVisitor.EnterMapping(YamlDotNet.Serialization.IPropertyDescriptor,YamlDotNet.Serialization.IObjectDescriptor,YamlDotNet.Core.IEmitter)">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor">
            <summary>
            Source: https://dotnetfiddle.net/8M6iIE.
            </summary>
        </member>
        <member name="M:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.#ctor(YamlDotNet.Serialization.IPropertyDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor"/> class.
            </summary>
            <param name="baseDescriptor">The base descriptor instance.</param>
        </member>
        <member name="P:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.Name">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.Type">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.TypeOverride">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.Order">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.ScalarStyle">
            <inheritdoc/>
        </member>
        <member name="P:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.CanWrite">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.Write(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.GetCustomAttribute``1">
            <inheritdoc/>
        </member>
        <member name="M:Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.Read(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.Loader.Features.Configs.ValidatingNodeDeserializer">
            <summary>
            Basic configs validation.
            </summary>
        </member>
        <member name="M:Exiled.Loader.Features.Configs.ValidatingNodeDeserializer.#ctor(YamlDotNet.Serialization.INodeDeserializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Exiled.Loader.Features.Configs.ValidatingNodeDeserializer"/> class.
            </summary>
            <param name="nodeDeserializer">The node deserializer instance.</param>
        </member>
        <member name="M:Exiled.Loader.Features.Configs.ValidatingNodeDeserializer.Deserialize(YamlDotNet.Core.IParser,System.Type,System.Func{YamlDotNet.Core.IParser,System.Type,System.Object},System.Object@)">
            <inheritdoc/>
        </member>
        <member name="T:Exiled.Loader.Loader">
            <summary>
            Used to handle plugins.
            </summary>
        </member>
        <member name="P:Exiled.Loader.Loader.Plugins">
            <summary>
            Gets the plugins list.
            </summary>
        </member>
        <member name="P:Exiled.Loader.Loader.Random">
            <summary>
            Gets the initialized global random class.
            </summary>
        </member>
        <member name="P:Exiled.Loader.Loader.Version">
            <summary>
            Gets the version of the assembly.
            </summary>
        </member>
        <member name="P:Exiled.Loader.Loader.Config">
            <summary>
            Gets the configs of the plugin manager.
            </summary>
        </member>
        <member name="P:Exiled.Loader.Loader.ShouldDebugBeShown">
            <summary>
            Gets a value indicating whether the debug should be shown or not.
            </summary>
        </member>
        <member name="P:Exiled.Loader.Loader.Dependencies">
            <summary>
            Gets plugin dependencies.
            </summary>
        </member>
        <member name="M:Exiled.Loader.Loader.Run(System.Reflection.Assembly[])">
            <summary>
            Runs the plugin manager, by loading all dependencies, plugins, configs and then enables all plugins.
            </summary>
            <param name="dependencies">The dependencies that could have been loaded by Exiled.Bootstrap.</param>
        </member>
        <member name="M:Exiled.Loader.Loader.LoadPlugins">
            <summary>
            Loads all plugins.
            </summary>
        </member>
        <member name="M:Exiled.Loader.Loader.LoadAssembly(System.String)">
            <summary>
            Loads an assembly.
            </summary>
            <param name="path">The path to load the assembly from.</param>
            <returns>Returns the loaded assembly or null.</returns>
        </member>
        <member name="M:Exiled.Loader.Loader.CreatePlugin(System.Reflection.Assembly)">
            <summary>
            Create a plugin instance.
            </summary>
            <param name="assembly">The plugin assembly.</param>
            <returns>Returns the created plugin instance or null.</returns>
        </member>
        <member name="M:Exiled.Loader.Loader.EnablePlugins">
            <summary>
            Enables all plugins.
            </summary>
        </member>
        <member name="M:Exiled.Loader.Loader.ReloadPlugins">
            <summary>
            Reloads all plugins.
            </summary>
        </member>
        <member name="M:Exiled.Loader.Loader.DisablePlugins">
            <summary>
            Disables all plugins.
            </summary>
        </member>
        <member name="M:Exiled.Loader.Loader.IsDependencyLoaded(System.String)">
            <summary>
            Check if a dependency is loaded.
            </summary>
            <param name="path">The path to check from.</param>
            <returns>Returns whether the dependency is loaded or not.</returns>
        </member>
        <member name="M:Exiled.Loader.Loader.IsAssemblyLoaded(System.String)">
            <summary>
            Check if an assembly is loaded.
            </summary>
            <param name="path">The path to check from.</param>
            <returns>Returns whether the assembly is loaded or not.</returns>
        </member>
        <member name="M:Exiled.Loader.Loader.LoadDependencies">
            <summary>
            Loads all dependencies.
            </summary>
        </member>
    </members>
</doc>
